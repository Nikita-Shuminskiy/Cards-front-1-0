{"version":3,"sources":["Common/Test/c1-SuperInputText/SuperInputText.module.css","Common/Test/c3-SuperCheckbox/SuperCheckbox.module.css","Common/Test/c2-SuperButton/SuperButton.module.css","Pages/Login/Login.tsx","Pages/Registration/Registration.tsx","Pages/PasswordRecovery/PasswordRecovery.tsx","Pages/EnteringNewPassword/NewPassword.tsx","Images/1548761996_2019-01-29_141751.jpg","Common/Error/GlobalError.tsx","Common/Test/c1-SuperInputText/SuperInputText.tsx","Common/Test/c3-SuperCheckbox/SuperCheckbox.tsx","Common/Test/c2-SuperButton/SuperButton.tsx","Common/Test/Test.tsx","Pages/NavBar/NavBar.tsx","Pages/Profile/Profile.tsx","App.tsx","reportWebVitals.ts","Store/Reducers/LoginReducer.ts","Store/Reducers/RegistrationReducer.ts","Store/Reducers/ProfileReducer.ts","Store/Store.ts","index.tsx","Pages/NavBar/Navbar.module.css"],"names":["module","exports","Login","Registration","PasswordRecovery","NewPassword","GlobalError","src","errorPhoto","alt","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","inputClassName","className","restProps","finalSpanClassName","s","finalInputClassName","inputStandart","errorInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","spanClassName","checkBox","checked","SuperButton","red","finalClassName","default","Test","NavBar","nav","item","activeClassName","active","to","setting","Profile","App","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","login","state","registration","profile","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5506506.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Goyh\",\"inputOK\":\"SuperInputText_inputOK__1ISsW\",\"errorInput\":\"SuperInputText_errorInput__1KdSD\",\"inputStandart\":\"SuperInputText_inputStandart__2Nhwd\",\"error\":\"SuperInputText_error__mTfEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkBox\":\"SuperCheckbox_checkBox__3XU4y\",\"spanClassName\":\"SuperCheckbox_spanClassName__3b7x1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3CzfV\",\"red\":\"SuperButton_red__1tJ1K\"};","import React from 'react';\r\n\r\n\r\nexport const Login = () => {\r\n  return (\r\n    <div> Login </div>\r\n  );\r\n}","import React from 'react';\r\n\r\n\r\nexport const Registration = () => {\r\n  return (\r\n    <div> Registration </div>\r\n  );\r\n}","import React from 'react';\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n  return (\r\n    <div> Login </div>\r\n  );\r\n}","import React from 'react';\r\n\r\n\r\nexport const NewPassword = () => {\r\n  return (\r\n    <div> Login </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/1548761996_2019-01-29_141751.e49107d4.jpg\";","import React from 'react';\r\nimport errorPhoto from '../../Images/1548761996_2019-01-29_141751.jpg'\r\n\r\n\r\nexport const GlobalError = () => {\r\n  return (\r\n    <div>\r\n      <img src={errorPhoto} alt=\"error\"/>\r\n    </div>\r\n  );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    inputClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, inputClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${'' ? '' : ''}`\r\n    const finalInputClassName = ` ${s.inputStandart} ${error  ?  s.errorInput : inputClassName} ` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkBox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >HI</button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react';\r\nimport SuperInputText from './c1-SuperInputText/SuperInputText';\r\nimport SuperCheckbox from './c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperButton from './c2-SuperButton/SuperButton';\r\n\r\nconst Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div>\r\n            <nav className={s.nav}>\r\n                <div className={`${s.item}`}><NavLink  activeClassName={s.active} to={'/entrynewpassword'}>Entrynewpassword</NavLink></div>\r\n                <div className={s.item}><NavLink  activeClassName={s.active} to={'/test'}>test</NavLink></div>\r\n                <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/profile'}>Profile</NavLink></div>\r\n                <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/registration'}>Registration</NavLink></div>\r\n                <div className={s.item + ' ' + s.setting}><NavLink  activeClassName={s.active} to={'/login'}>Login</NavLink></div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\n\r\nexport const Profile = () => {\r\n  return (\r\n    <div> Profile </div>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Login } from './Pages/Login/Login';\nimport { Registration } from './Pages/Registration/Registration';\nimport { PasswordRecovery } from './Pages/PasswordRecovery/PasswordRecovery';\nimport { NewPassword } from './Pages/EnteringNewPassword/NewPassword';\nimport { GlobalError } from './Common/Error/GlobalError';\nimport Test from './Common/Test/Test';\nimport NavBar from './Pages/NavBar/NavBar';\nimport { Profile } from './Pages/Profile/Profile';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <NavBar/>\n      <Switch>\n        <Route path={'/login'} render={() => <Login/>} />\n        <Route path={'/registration'} render={() => <Registration/>}/>\n        <Route path={'/profile'} render={() => <Profile/>}/>\n        <Route path={'/404'} render={() => <GlobalError/>}/>\n        <Route path={'/recoverypassword'} render={() => <PasswordRecovery/>}/>\n        <Route path={'/entrynewpassword'} render={() => <NewPassword/>}/>\n        <Route path={'/test'} render={() => <Test/>}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nconst initialState = { }\r\nexport const loginReducer = (state = initialState, action: any):any => {\r\n    return state\r\n};\r\n","\r\n\r\nconst initialState = { }\r\n\r\n\r\nexport const registrationReducer = (state = initialState, action: any):any => {\r\n    return state\r\n};\r\n","\r\n\r\nconst initialState = { }\r\nexport const profileReducer = (state = initialState, action: any):any => {\r\n    return state\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport {loginReducer} from './Reducers/LoginReducer'\r\nimport {registrationReducer} from './Reducers/RegistrationReducer'\r\nimport {profileReducer} from './Reducers/ProfileReducer'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nexport type ActionType = {}\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n// определить автоматически тип всего объекта состояния\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n//export type AppDispatchType = Dispatch<ActionType>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './Store/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <HashRouter>\n        <App />\n    </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Og5F\",\"item\":\"Navbar_item__3j82g\",\"active\":\"Navbar_active__1Zklu\",\"setting\":\"Navbar_setting__vz-Yz\"};"],"sourceRoot":""}